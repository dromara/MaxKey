# MaxKey Passkey 模块配置示例
# 将此配置添加到主应用的 application.yml 中

maxkey:
  passkey:
    # 是否启用 Passkey 功能
    enabled: true
    
    # RP (Relying Party) 配置
    relying-party:
      # RP 名称，显示给用户
      name: "MaxKey"
      # RP ID，通常是域名（生产环境必须配置为实际域名）
      id: "localhost"
      # RP 图标 URL（可选）
      icon: "/static/images/maxkey-logo.png"
    
    # 认证器配置
    authenticator:
      # 认证器附件偏好：platform（平台认证器）, cross-platform（跨平台认证器）, null（无偏好）
      attachment: "platform"
      # 用户验证要求：required（必需）, preferred（首选）, discouraged（不鼓励）
      user-verification: "required"
      # 证明偏好：none（无）, indirect（间接）, direct（直接）
      attestation: "none"
      # 是否要求驻留密钥（可发现凭据）
      require-resident-key: false
    
    # 挑战配置
    challenge:
      # 挑战长度（字节）
      length: 32
      # 挑战过期时间（分钟）
      expire-minutes: 5
      # 操作超时时间（毫秒）
      timeout-ms: 60000
      # 是否自动清理过期挑战
      auto-cleanup: true
      # 清理间隔（小时）
      cleanup-interval-hours: 1
    
    # 用户限制配置
    user-limits:
      # 每个用户最大 Passkey 数量
      max-passkeys-per-user: 5
      # 是否允许重复注册相同设备
      allow-duplicate-devices: false
    
    # 会话配置
    session:
      # 认证会话过期时间（分钟）
      auth-session-expire-minutes: 30
      # 是否启用会话管理
      enabled: true

# 日志配置（可选）
logging:
  level:
    # Passkey 模块日志级别
    org.dromara.maxkey.passkey: INFO
    # WebAuthn 相关日志
    com.webauthn4j: WARN
    
# 数据源配置（如果使用独立数据源）
# spring:
#   datasource:
#     passkey:
#       url: jdbc:mysql://localhost:3306/maxkey_passkey
#       username: maxkey
#       password: maxkey
#       driver-class-name: com.mysql.cj.jdbc.Driver

# 缓存配置（可选，用于挑战缓存）
# spring:
#   cache:
#     type: redis
#   redis:
#     host: localhost
#     port: 6379
#     database: 1
#     timeout: 2000ms
#     lettuce:
#       pool:
#         max-active: 8
#         max-idle: 8
#         min-idle: 0

# 安全配置
security:
  # CORS 配置（如果需要跨域支持）
  cors:
    allowed-origins:
      - "https://your-domain.com"
      - "http://localhost:3000"  # 开发环境
    allowed-methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    allowed-headers:
      - "*"
    allow-credentials: true

# 监控配置（可选）
management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - metrics
          - passkey  # 自定义 Passkey 监控端点
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    tags:
      application: maxkey-passkey

# 生产环境配置示例
---
spring:
  profiles: production
  
maxkey:
  passkey:
    relying-party:
      # 生产环境必须使用实际域名
      id: "auth.yourcompany.com"
      name: "Your Company SSO"
    authenticator:
      # 生产环境建议使用更严格的验证
      user-verification: "required"
      attestation: "indirect"
    challenge:
      # 生产环境可以使用更短的过期时间
      expire-minutes: 3
      timeout-ms: 30000
    session:
      # 生产环境可以使用更短的会话时间
      auth-session-expire-minutes: 15

# 开发环境配置示例
---
spring:
  profiles: development
  
maxkey:
  passkey:
    relying-party:
      id: "localhost"
    authenticator:
      # 开发环境可以放宽验证要求
      user-verification: "preferred"
    challenge:
      # 开发环境使用更长的过期时间便于调试
      expire-minutes: 10
      timeout-ms: 120000

logging:
  level:
    org.dromara.maxkey.passkey: DEBUG
    root: INFO